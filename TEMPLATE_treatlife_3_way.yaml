esphome:
  name: ${device_name}
  name_add_mac_suffix: true
  platform: ESP8266
  board: esp01_1m

status_led:
  pin:
    number: GPIO5   # Red LED
    inverted: True
binary_sensor:
  - platform: gpio
    id: power_sensor
    pin:
      number: GPIO14
      inverted: True
    filters:
      - delayed_off: 50ms
    on_press:
      - light.turn_off: white_led
    on_release:
      - light.turn_on: white_led
    internal: True
  - platform: gpio
    pin:
      number: GPIO13
      inverted: True
    id: button
    name: ${friendly_name} Button
    on_multi_click:
   # Single Click:
    - timing:
      - ON for at most 1s
      - OFF for at least 0.3s
      then:
        - switch.toggle: light_switch
        - logger.log: "Single Click"
        - homeassistant.event:
            event: esphome.${event_name}
            data:
              title: single_click
   # Double Click:
    - timing:
      - ON for at most 1s
      - OFF for at most 1s
      - ON for at most 1s
      - OFF for at least 0.2s
      then:
        - logger.log: "Double Clicked"
        - homeassistant.event:
            event: esphome.${event_name}
            data:
              title: double_click
    # Long Press:
    - timing:
      - ON for 1s to 2s
      - OFF for at least 0.3s
      then:
        - logger.log: "Single Long Press"
        - homeassistant.event:
            event: esphome.${event_name}
            data:
              title: long_press
    - timing:
      - ON for at least 2.2s
      then:
        - logger.log: "Press and Hold"
        - homeassistant.event:
            event: esphome.${event_name}
            data:
              title: hold
    internal: True
light:
  - platform: binary
    id: white_led
    output: led_1
    restore_mode: RESTORE_DEFAULT_ON
    internal: True
output:
  - platform: gpio
    id: led_1
    pin:
      number: GPIO4
      inverted: True
switch:
  - platform: gpio
    id: red_led
    pin:
      number: GPIO5
      inverted: True
    internal: True

  - platform: gpio
    pin: GPIO12
    id: relay
    restore_mode: RESTORE_DEFAULT_OFF
    internal: True

  - platform: template
    name: ${friendly_name}
    id: light_switch
    icon: ${icon}
    lambda: |-
      if (id(power_sensor).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
    - if:
        condition:
          - binary_sensor.is_off: power_sensor
        then:
          - switch.toggle: relay
    turn_off_action:
    - if:
        condition:
          - binary_sensor.is_on: power_sensor
        then:
          - switch.toggle: relay

